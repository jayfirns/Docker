Author: John Firnschild
Written: 9/30

Here's a sample document detailing how to check what is installed, what is running, and how to start, restart, and shut down Docker containers using Jellyfin and RetroPie as examples:

## Docker Basics: Managing Containers

### Introduction

Current Services include:

Jellyfin
RetroPie


### Prerequisites

- Docker must be installed on your system.
- Docker Compose should also be installed for multi-container management.

### Check Installed Docker and Docker Compose

1. **Check Docker Installation:**

   To verify if Docker is installed, open a terminal and run:

   ```bash
   docker --version
   ```

   This command should display the Docker version if it is installed.

2. **Check Docker Compose Installation:**

   To verify if Docker Compose is installed, run:

   ```bash
   docker-compose --version
   ```

   This command should display the Docker Compose version if it is installed.

### Managing Containers

#### Starting Containers

1. **Start the Jellyfin Service:**

   Navigate to the directory containing your `docker-compose-jellyfin.yml` file and run:

   ```bash
   docker-compose -f docker-compose-jellyfin.yml up -d
   ```

   The `-d` flag runs the container in detached mode (in the background).

2. **Start the RetroPie Service:**

   Navigate to the directory containing your `docker-compose-retropie.yml` file and run:

   ```bash
   docker-compose -f docker-compose-retropie.yml up -d
   ```

#### Checking Running Containers

1. **Check Running Containers:**

   To see a list of running containers, use the following command:

   ```bash
   docker ps
   ```

   This command will display information about all running containers, including their names, IDs, ports, and more.

#### Restarting Containers

1. **Restart a Container (e.g., Jellyfin):**

   To restart a specific container (e.g., Jellyfin), use:

   ```bash
   docker restart jellyfin
   ```

   Replace `jellyfin` with the actual container name.

#### Stopping and Removing Containers

1. **Stop a Container (e.g., RetroPie):**

   To stop a specific container (e.g., RetroPie), use:

   ```bash
   docker stop retropie
   ```

   Replace `retropie` with the actual container name.

2. **Remove a Stopped Container (e.g., RetroPie):**

   To remove a stopped container (e.g., RetroPie), use:

   ```bash
   docker rm retropie
   ```

   Replace `retropie` with the actual container name.

### Notes

